digraph whatever{
rankdir="BT";
problem_parsers_AmazonLineParser [ shape="record", label = "{AmazonLineParser||+ parse(arg0: java.lang.String): java.lang.String[]\l}" ];
problem_DataStandardizerApp [ shape="record", label = "{DataStandardizerApp|\# company: java.lang.String\l\# data: java.lang.String\l\# frame: javax.swing.JFrame\l\# topPanel: javax.swing.JPanel\l\# txtField: javax.swing.JTextField\l\# button: javax.swing.JButton\l\# scrollPane: javax.swing.JScrollPane\l\# textArea: javax.swing.JTextArea\l\# label: javax.swing.JLabel\l\# standardizer: problem.DataStandardizer\l|\# createAndShowGUI(): void\l+ execute(): void\l+ parse(arg0: java.lang.String): void\l+ getCompany(): java.lang.String\l+ getData(): java.lang.String\l+ main(arg0: java.lang.String[]): void\l}" ];
problem_parsers_MicrosoftLineParser [ shape="record", label = "{MicrosoftLineParser||+ parse(arg0: java.lang.String): java.lang.String[]\l}" ];
java_lang_Object [ shape="record", label = "{Object||- registerNatives(): void\l+ getClass(): java.lang.Class\l+ hashCode(): int\l+ equals(arg0: java.lang.Object): boolean\l\# clone(): java.lang.Object\l+ toString(): java.lang.String\l+ notify(): void\l+ notifyAll(): void\l+ wait(arg0: long): void\l+ wait(arg0: long, arg1: int): void\l+ wait(): void\l\# finalize(): void\l}" ];
problem_DataStandardizer [ shape="record", label = "{DataStandardizer|- parsers: java.util.Map\l|+ addParser(arg0: java.lang.String, arg1: problem.ILineParser): void\l+ parse(arg0: java.lang.String, arg1: java.lang.String): java.lang.String[]\l}" ];
problem_ILineParser [ shape="record", label = "{\<\<interface\>\>\nILineParser|+ parse(arg0: java.lang.String): java.lang.String[]\l}" ];
problem_parsers_GoogleLineParser [ shape="record", label = "{GoogleLineParser||+ parse(arg0: java.lang.String): java.lang.String[]\l}" ];
problem_parsers_AmazonLineParser -> java_lang_Object [arrowhead="onormal"];
problem_parsers_AmazonLineParser -> problem_ILineParser [arrowhead="onormal", style="dashed"];
problem_DataStandardizerApp -> java_lang_Object [arrowhead="onormal"];
problem_parsers_MicrosoftLineParser -> java_lang_Object [arrowhead="onormal"];
problem_parsers_MicrosoftLineParser -> problem_ILineParser [arrowhead="onormal", style="dashed"];
problem_DataStandardizer -> java_lang_Object [arrowhead="onormal"];
problem_ILineParser -> java_lang_Object [arrowhead="onormal"];
problem_parsers_GoogleLineParser -> java_lang_Object [arrowhead="onormal"];
problem_parsers_GoogleLineParser -> problem_ILineParser [arrowhead="onormal", style="dashed"];
}